{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "watchedfiledatafactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InputDataSet",
								"type": "DatasetReference"
							},
							"name": "MyDataFlow"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OutputDataSet",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"linkedService": {
								"referenceName": "AzureBlobFS1",
								"type": "LinkedServiceReference"
							},
							"name": "sink2"
						},
						{
							"linkedService": {
								"referenceName": "AzureBlobFS1",
								"type": "LinkedServiceReference"
							},
							"name": "sink3"
						}
					],
					"transformations": [
						{
							"name": "Flatten1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "DerivedColumn3"
						}
					],
					"script": "source(output(\n\t\tusers as (userId as string, firstName as string, lastName as string, phoneNumber as string, emailAddress as string)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'singleDocument') ~> MyDataFlow\nMyDataFlow foldDown(unroll(users),\n\tmapColumn(\n\t\tusers\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nFlatten1 derive(SourceFileName = 'ReportingExtract_' + toString(currentDate()) + ' ' + toString(random(4)) + '.json',\n\t\tusers = @(id=users.userId,\n\t\tname=concat(toString(users.firstName), \" \", toString(users.lastName)),\n\t\tnumber=users.phoneNumber,\n\t\temail=users.emailAddress)) ~> DerivedColumn2\nFlatten1 derive(root = @(users=@(user=@(id=users.userId,\n\t\tname=concat(toString(users.firstName), \" \", toString(users.lastName)),\n\t\tnumber=users.phoneNumber,\n\t\temail=users.emailAddress))),\n\t\tsourceFileName = 'ReportingExtract_' + toString(currentDate()) + ' ' + toString(random(4)) + '.json') ~> DerivedColumn3\nDerivedColumn2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['sink1.json'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nDerivedColumn2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'json',\n\tcontainer: 'sanitised',\n\tpartitionFileNames:['sink2.json'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2\nDerivedColumn3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'json',\n\tcontainer: 'sanitised',\n\trowUrlColumn:'sourceFileName',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tusers = root.users.user\n\t)) ~> sink3"
				}
			},
			"dependsOn": []
		}
	]
}